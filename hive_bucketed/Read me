Approach:

First Run:

Load first data file to STG table and perform insert into from STG table to set effective and expiry date.

Monthly Run:

Load new files data to STG table and compare the data with the historical table to identify the new and changed users.

Both the STG and HIST tables will be created in the ORC format for optimal performance


Partitioned Hive tables with buckets:

Table definition is given in the below file:

https://github.com/sahilbhange/slowly-changing-dimention/blob/master/hive_partitioned/hive_partitioned_create_table

Partitioning is helpful for partition pruning and achieving parallelism 

See below link for Hive query optimization

https://www.qubole.com/blog/hive-best-practices/

Identify a good partition key, which will distribute the data evenly into the partitions and use it in the join key.

Buckets (Clustered By):

Since we are joining 2 tables on user_id key, create 4 buckets sorted by user_id column as sorting each bucket on user_id will help in join performance.
